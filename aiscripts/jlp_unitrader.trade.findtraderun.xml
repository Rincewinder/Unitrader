<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="jlp.unitrader.trade.findtraderun" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1"
>
	<params>
		<param name="warelist" />
		<param name="range" />
		<!--TODO: Support sellrange and buyrange for station working trade ships -->
		<param name="sellrange" default="null" comment="TODO" />
		<param name="buyrange" default="null" comment="TODO" />
		<param name="lasttrade" default="null" comment="list: [$buyoffer, $ware, $tradepartner]" />
		<param name="debugchance" default="0" />
		<param name="debugchance2" default="0" comment="more spammy" />
	</params>
	<init>
		<set_command_action commandaction="commandaction.searchingtrades" />
	</init>
	<attention min="unknown">
		<actions>

			<!-- set up initial state for trade runs -->
			<label name="start" />
			<set_value name="$buyoffer" exact="null" />
			<set_value name="$selloffer" exact="null" />
			<set_value name="$currentcargo" exact="this.ship.cargo.list" />

			<!-- strip fuel cells for own need from the list -->
			<do_if value="not $warelist.indexof.{ware.fuelcells}">
				<set_value name="$fuelindex" exact="$currentcargo.indexof.{ware.fuelcells}" />
				<do_if value="$fuelindex">
					<remove_value name="$currentcargo.{$fuelindex}" />
				</do_if>
			</do_if>
			<do_else>
				<!-- TODO: fuel trade ship needs to keep some for own use and the rest for trading -->
			</do_else>

			<debug_text text="player.age + ' finding trade offer; range: ' + $range.knownname"
				chance="$debugchance" />
			<debug_text text="player.age + ' current cargo: ' + $currentcargo" chance="$debugchance" />
			<debug_text text="player.age + ' commander: ' + this.ship.commander.knownname" chance="$debugchance" />

			<label name="find trade run" />
			<!-- try to find a buy offer for wares in our cargo first -->
			<do_if value="$currentcargo.count gt 0">
				<!-- in case it was resources for our station, wait until we can deliver them -->
				<debug_text text="player.age + ' checking if we can sell our current cargo to our homebase'"
					chance="$debugchance" />
				<find_buy_offer tradepartner="this.ship" buyer="this.ship.commander" wares="$currentcargo"
					result="$buyoffer"
				>
					<amount min="1" />
				</find_buy_offer>
				<do_if value="$buyoffer.available">
					<debug_text
						text="'we have cargo on board that our homebase needs: %1 in %2 needs %3 %4'.[$buyoffer.buyer.knownname, $buyoffer.buyer.zone.knownname, $buyoffer.offeramount.{this}, $buyoffer.ware.name]"
						chance="$debugchance" />
					<resume label="finish" />
				</do_if>
				<do_else>
					<!-- in case it was wares that our homebase does not need, shop around the range to find another 
						buyer -->
					<!-- find a buy offer that matches our cargo, proceeds will now go to our new commander -->
					<debug_text text="player.age + ' checking if we can sell our current cargo somewhere else'"
						chance="$debugchance" />
					<do_all exact="2" counter="$pass">
						<do_all exact="$currentcargo.count" counter="$i" reverse="1">
							<set_value name="$currentware" exact="$currentcargo.{$i}" />
							<do_if value="this.ship.commander.resources.{$currentware}.exists">
								<!-- don't sell potential resources for our homebase to someone else, just keep them. We will 
									be able to deliver them later -->
								<remove_value name="$currentcargo.{$i}" />
								<continue />
							</do_if>

							<do_if value="$pass == 1">
								<do_if value="this.ship.commander.istraderestricted.{$currentware}">
									<find_buy_offer tradepartner="this.ship" wares="$currentware" space="$range"
										result="$buyoffer"
									>
										<match_buyer class="class.ship_xl" owner="this.ship.commander.owner" comment="try and find/prefer build platforms" />
									</find_buy_offer>
								</do_if>
								<do_else>
									<find_buy_offer tradepartner="this.ship" wares="$currentware" space="$range"
										result="$buyoffer"
									>
										<match_buyer class="class.ship_xl" comment="try and find/prefer build platforms" />
									</find_buy_offer>
								</do_else>
								<do_if value="$buyoffer.exists">
									<debug_text
										text="'builder ship trade run found: %1 in %2 needs %3 %4'.[$buyoffer.buyer.knownname, $buyoffer.buyer.zone.knownname, $buyoffer.offeramount.{this}, $buyoffer.ware.name]"
										chance="$debugchance" />
									<resume label="finish" />
								</do_if>
								<wait min="3s" max="5s" sinceversion="1" />
							</do_if>
							<do_else>
								<do_if value="this.ship.commander.istraderestricted.{$currentware}">
									<!-- if we are only allowed to sell to our own faction anyway, ignore the price -->
									<find_buy_offer tradepartner="this.ship" wares="$currentware" space="$range"
										result="$buyoffers" multiple="true"
									>
										<match_buyer owner="this.ship.commander.owner">
											<match negate="true" class="class.ship_xl" />
										</match_buyer>
										<offeramount min="this.ship.cargo.{$currentware}.count * 0.25f" entity="this" />
									</find_buy_offer>
								</do_if>
								<do_else>
									<set_value name="$minbuyprice" exact="$currentware.minprice" />
									<do_if value="this.ship.commander.products.{$currentware}.exists">
										<find_sell_offer seller="this.ship.commander" wares="$currentware" result="$homebaseselloffer">
											<amount min="1" />
										</find_sell_offer>
										<do_if value="$homebaseselloffer.available">
											<!-- we don't want to make a loss when selling off products from our homebase, otherwise just 
												try and dump the goods -->
											<set_value name="$minbuyprice" exact="$homebaseselloffer.unitprice" />
										</do_if>
										<do_else>
											<set_value name="$minbuyprice" exact="$currentware.averageprice" />
										</do_else>
									</do_if>
									<find_buy_offer tradepartner="this.ship" wares="$currentware" space="$range"
										result="$buyoffers" multiple="true"
									>
										<match_buyer>
											<match negate="true" class="class.ship_xl" />
										</match_buyer>
										<offeramount min="this.ship.cargo.{$currentware}.count * 0.25f" entity="this" />
										<price min="$minbuyprice" />
									</find_buy_offer>
									<remove_value name="$minbuyprice" />
								</do_else>
								<debug_text
									text="player.age + ' found %1 buyoffers for at least %2 %3 in %4'.[$buyoffers.count, this.ship.cargo.{$currentware}.count * 0.25f, $currentware, $range.knownname]"
									chance="$debugchance" />
								<set_value name="$buyoffer" exact="null" />
								<do_while value="$buyoffers.count gt 0">
									<set_value name="$buyidx" min="1" max="$buyoffers.count" />
									<set_value name="$buyoffer" exact="$buyoffers.{$buyidx}" />
									<do_if value="$buyoffer.buyer.owner == this.owner">
										<!-- slight bias towards selling to same faction -->
										<break />
									</do_if>
									<remove_value name="$buyoffers.{$buyidx}" />
								</do_while>
								<do_if value="$buyoffer.exists">
									<debug_text
										text="'we have cargo on board that our homebase does not need, but we can sell it in the allowed range: %1 in %2 needs %3 %4'.[$buyoffer.buyer.knownname, $buyoffer.buyer.zone.knownname, $buyoffer.offeramount.{this}, $buyoffer.ware.name]"
										chance="$debugchance" />
									<resume label="finish" />
								</do_if>
								<wait min="10s" max="20s" sinceversion="1" />
							</do_else>
						</do_all>
					</do_all>
				</do_else>
			</do_if>

			<!-- update the wares we deal with for a new trade run - ensure that we don't miss any wares if the 
				list has changed due to the homebase being expanded -->
			<do_if value="this.ship.commander.isoperational">
				<set_value name="$homebase" exact="this.ship.commander" />
				<set_value name="$resources" exact="$homebase.resources.list" />
				<set_value name="$products" exact="$homebase.products.list" />
				<set_value name="$tradewares" exact="$homebase.tradewares.list" />
				<evaluate_ammo_storage object="$homebase" wares="$ammowares" type="missile" />
				<do_all exact="$resources.count" counter="$i">
					<set_value name="$ware" exact="$resources.{$i}" />
					<do_if value="this.ship.cargo.{$ware}.max gt 0">
						<do_if value="$warelist.indexof.{$ware}" exact="0">
							<append_to_list name="$warelist" exact="$ware" />
						</do_if>
					</do_if>
				</do_all>
				<do_all exact="$products.count" counter="$i">
					<set_value name="$ware" exact="$products.{$i}" />
					<do_if value="this.ship.cargo.{$ware}.max gt 0">
						<do_if value="$warelist.indexof.{$ware}" exact="0">
							<append_to_list name="$warelist" exact="$ware" />
						</do_if>
					</do_if>
				</do_all>
				<do_all exact="$tradewares.count" counter="$i">
					<set_value name="$ware" exact="$tradewares.{$i}" />
					<do_if value="this.ship.cargo.{$ware}.max gt 0">
						<do_if value="$warelist.indexof.{$ware}" exact="0">
							<append_to_list name="$warelist" exact="$ware" />
						</do_if>
					</do_if>
				</do_all>
				<do_all exact="$ammowares.count" counter="$i">
					<set_value name="$ware" exact="$ammowares.{$i}" />
					<do_if value="this.ship.cargo.{$ware}.max gt 0">
						<do_if value="$warelist.indexof.{$ware}" exact="0">
							<append_to_list name="$warelist" exact="$ware" />
						</do_if>
					</do_if>
				</do_all>

				<debug_text
					text="'updating warelist on %1(%2) to transport %3'.[this.ship.knownname, this.ship, $warelist]"
					chance="$debugchance" />
				<remove_value name="$homebase" />
				<remove_value name="$ammowares" />
				<remove_value name="$tradewares" />
				<remove_value name="$products" />
				<remove_value name="$resources" />
				<remove_value name="$ware" />
			</do_if>

			<debug_text text="player.age + ' checking if we can sell products from our station somewhere'"
				chance="$debugchance" />
			<do_if value="this.ship.isplayerowned">
				<find_sell_offer tradepartner="this.ship" seller="this.ship.commander" wares="$warelist"
					result="$selloffers" multiple="true"
				>
					<relativeprice max="0.999999f"
						comment="this effectively means the price must be below the average price to be considered" />
					<amount min="1" />
				</find_sell_offer>
			</do_if>
			<do_else>
				<find_sell_offer tradepartner="this.ship" seller="this.ship.commander" wares="$warelist"
					result="$selloffers" multiple="true"
				>
					<amount min="1" />
				</find_sell_offer>
			</do_else>
			<do_if value="$selloffers.count gt 0">
				<!-- find a buy offer that matches one of our sell offers -->
				<!-- try to sell off the wares that we have the most of first, sort by relativeprice to avoid weirdness 
					with intermediate wares -->
				<sort_trades name="$selloffers" tradelist="$selloffers" sorter="relativeprice" />
				<do_all exact="2" counter="$pass">
					<do_all exact="$selloffers.count" counter="$i">
						<do_if value="$selloffers.{$i}.available">
							<do_if
								value="@$lasttrade and $lasttrade.{1} and $lasttrade.{2} == $selloffers.{$i}.ware and $lasttrade.{3} == $selloffers.{$i}.seller"
							>
								<!-- the last thing we did was sell this ware to our homebase, don't buy it back immediately! -->
								<debug_text
									text="'we just sold %1 to homebase %2 (%3), don\'t try to buy it right back!'.[$lasttrade.{2}, $lasttrade.{3}.knownname, $lasttrade.{3}]"
									chance="$debugchance2" />
								<continue />
							</do_if>

							<do_if value="$pass == 1">
								<do_if value="@$selloffers.{$i}.restriction.faction">
									<!-- if there is a faction restriction for this ware, don't look for buyers of a different faction! -->
									<find_buy_offer tradepartner="this.ship" wares="$selloffers.{$i}.ware"
										space="$range" result="$buyoffer"
									>
										<match_buyer class="class.ship_xl" owner="$selloffers.{$i}.restriction.faction"
											comment="try and find/prefer build platforms" />
									</find_buy_offer>
								</do_if>
								<do_else>
									<find_buy_offer tradepartner="this.ship" wares="$selloffers.{$i}.ware"
										space="$range" result="$buyoffer"
									>
										<match_buyer class="class.ship_xl" comment="try and find/prefer build platforms" />
									</find_buy_offer>
								</do_else>
								<do_if value="$buyoffer.exists">
									<set_value name="$selloffer" exact="$selloffers.{$i}" />
									<debug_text
										text="'builder ship trade run found: %1 in %2 needs %3 %4'.[$buyoffer.buyer.name, $buyoffer.buyer.zone.knownname, $buyoffer.offeramount.{this}, $buyoffer.ware.name]"
										chance="$debugchance" />
									<resume label="finish" />
								</do_if>
								<wait min="3s" max="5s" />
							</do_if>
							<do_else>
								<do_if value="@$selloffers.{$i}.restriction.faction">
									<!-- if there is a faction restriction for this ware, don't look for buyers of a different faction! -->
									<find_buy_offer tradepartner="this.ship" wares="$selloffers.{$i}.ware"
										space="$range" result="$buyoffer"
									>
										<match_buyer owner="$selloffers.{$i}.restriction.faction">
											<match negate="true" class="class.ship_xl" />
										</match_buyer>
										<relativeprice min="1f"
											comment="this effectively means the price must be above the average price to be considered" />
									</find_buy_offer>
								</do_if>
								<do_else>
									<find_buy_offer tradepartner="this.ship" wares="$selloffers.{$i}.ware"
										space="$range" result="$buyoffer"
									>
										<match_buyer>
											<match negate="true" class="class.ship_xl" />
										</match_buyer>
										<relativeprice min="1f"
											comment="this effectively means the price must be above the average price to be considered" />
									</find_buy_offer>
								</do_else>
								<do_if value="$buyoffer.exists">
									<set_value name="$selloffer" exact="$selloffers.{$i}" />
									<resume label="finish" />
								</do_if>
								<wait min="10s" max="20s" />
							</do_else>
						</do_if>
					</do_all>
				</do_all>
			</do_if>

			<debug_text text="player.age + ' checking if we can buy resources for our station somewhere'"
				chance="$debugchance" />
			<find_buy_offer tradepartner="this.ship" buyer="this.ship.commander" wares="$warelist"
				result="$buyoffers" multiple="true"
			>
				<amount min="1" />
			</find_buy_offer>
			<do_if value="$buyoffers.count gt 0">
				<!-- find a sell offer that matches one of our buy offers -->
				<!-- build table with priorities, making primary resources more "urgent" than secondaries or ammo 
					offers -->
				<set_value name="$offertable" exact="table[]" />
				<do_all exact="$buyoffers.count" counter="$i">
					<set_value name="$offer" exact="$buyoffers.{$i}" />
					<do_if value="$offer.available">

						<do_if
							value="@$lasttrade and (not $lasttrade.{1}) and $lasttrade.{2} == $offer.ware and $lasttrade.{3} == $offer.buyer"
						>
							<!-- the last thing we did was buy this ware from our homebase, don't sell it back immediately! -->
							<debug_text
								text="'we just bought %1 from homebase %2 (%3), don\'t try to sell it right back!'.[$lasttrade.{2}, $lasttrade.{3}.knownname, $lasttrade.{3}]"
								chance="$debugchance2" />
							<continue />
						</do_if>

						<set_value name="$offertable.{$offer}"
							exact="$offer.stocklevel + (0.8 * this.ship.commander.resources.{$offer.ware}.primary)" />
					</do_if>
				</do_all>
				<!-- we now use the list of offers which has been sorted by the priority values -->
				<set_value name="$buyoffers" exact="$offertable.keys.sorted" />
				<!-- $table.keys.sorted gives us the listed sorted by values from lowest to highest, so we need to 
					iterate in reverse -->
				<do_all exact="$buyoffers.count" counter="$i" reverse="true">
					<do_if value="@$buyoffers.{$i}.restriction.faction">
						<!-- if there is a faction restriction for this ware, don't look for sellers of a different faction! -->
						<find_sell_offer tradepartner="this.ship" wares="$buyoffers.{$i}.ware" space="$range"
							result="$selloffer"
						>
							<match_seller owner="$buyoffers.{$i}.restriction.faction" />
						</find_sell_offer>
					</do_if>
					<do_else>
						<find_sell_offer tradepartner="this.ship" wares="$buyoffers.{$i}.ware" space="$range"
							result="$selloffer" />
					</do_else>
					<do_if value="$selloffer.exists">
						<set_value name="$buyoffer" exact="$buyoffers.{$i}" />
						<resume label="finish" />
					</do_if>
					<debug_text text="'waiting'" chance="$debugchance" />
					<wait min="10s" max="20s" />
				</do_all>
			</do_if>

			<!-- can't find anything good at the moment... wait a while, then check again -->
			<debug_text
				text="player.age + ' no good trade offer found, waiting for a while before checking again'"
				chance="$debugchance" />
			<debug_text
				text="player.age + ' no good trade offer found. \'%1\'(job: \'%5\'), commander: \'%2\', buyoffers: \'%3\', selloffers: \'%4\''.[this.ship.knownname, this.ship.commander.knownname, $buyoffers, $selloffers, this.ship.job]"
				chance="$debugchance2" />
			<do_if value="@this.ship.commanderentity.$config_subordinate_range">
				<do_if value="$range != this.ship.commanderentity.$config_subordinate_range">
					<set_value name="$range" exact="this.ship.commanderentity.$config_subordinate_range" />
				</do_if>
			</do_if>
			<set_value name="$idletime" min="30s" max="90s" />
			<run_script name="'move.idle'">
				<param name="TimeOut" value="$idletime" />
			</run_script>
			<resume label="start" />

			<label name="finish" />
			<do_if value="$buyoffer.exists">
				<debug_text
					text="player.age + ' BUYOFFER INFO:\n\'%1\' buys %2 (desires: %5) units of %3 for a total price of %4 Cr.'.[$buyoffer.buyer.knownname, $buyoffer.offeramount.{this}, $buyoffer.ware.name, $buyoffer.price/1Cr, $buyoffer.amount]"
					chance="$debugchance" />
			</do_if>
			<do_if value="$selloffer.exists">
				<debug_text
					text="player.age + ' SELLOFFER INFO:\n\'%1\' sells %2 units of %3 for a total price of %4 Cr.'.[$selloffer.seller.knownname, $selloffer.offeramount.{this}, $selloffer.ware.name, $selloffer.price/1Cr]"
					chance="$debugchance" />
			</do_if>

			<!-- TODO: if we find that traders buy too much of a ware, only fill a fraction of the cargo space 
				with any one ware, so that we'll still have space for others left (only if the basket contains more than 
				one ware) -->
			<!--<set_value name="$totalcargospace" exact="this.ship.cargo.{$ware}.max" />
				<set_value name="$freecargospace" exact="this.ship.cargo.{$ware}.free" />
				<set_value name="$amount" />
				<debug_text text="'Amount that will be traded: ' + $amount" chance="$debugchance" />
				<retval name="amount" value="$amount" /> -->

			<return>
				<retval name="buyoffer" value="$buyoffer" />
				<retval name="selloffer" value="$selloffer" />
			</return>

		</actions>
	</attention>
</aiscript>
