<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="jlp.unitrader.trade.performtraderun" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="4"
>
	<params>
		<param name="selloffer" />
		<param name="buyoffer" />
		<param name="simple" default="null" />
		<param name="minPriceRisk" default="5" comment="min Pricerange in % is accepted." />
		<param name="minProfitRisk" default="5" comment="max Profit in % is accepted. Min 30% recommend" />
		<param name="minCargoWasteRisk" default="5"
			comment="min cargoRisk from Selloffer to Buyoffer in % is accepted." />
		<param name="minCargoRisk" default="5" comment="min cargo waste risk from ship in % is accepted." />
		<param name="debugchance" default="0" />
		<param name="debugchance2" default="0" />
	</params>
	<init>
		<set_command_action commandaction="commandaction.searchingtrades" />
	</init>
	<patch sinceversion="1">
		<set_value name="$simple" exact="null" />
	</patch>
	<patch sinceversion="2">
		<do_if value="$buyoffer.exists">
			<set_value name="$buyer" exact="$buyoffer.buyer" />
		</do_if>
	</patch>
	<patch sinceversion="3">
		<set_value name="$lasttrade" exact="[@$isbuyoffer, @$tradeware, @$targetobject]" />
	</patch>
	<patch sinceversion="4">
		<!-- all reservations have been wiped as of 4.0, restore reservations we need, but only for L or XL
			ships, since smaller traders didn't do reservations before -->
		<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
			<debug_text
				text="'try to restore reservations for %1(%2)\n  $isbuyoffer? = %3\n  $tradeoffer.exists = %4\n  $amount = %5\n  $targetobject.isoperational = %6\n  $tradeware = %7\n  $reservation_removed? = %8'.[this.name, this, $isbuyoffer?, $tradeoffer.exists, $amount, $targetobject.isoperational, $tradeware, $reservation_removed?]"
				chance="$debugchance" />
			<do_if value="$isbuyoffer? and $amount gt 0 and $targetobject.isoperational and $tradeware">
				<do_if value="not $tradeoffer.exists">
					<do_if value="$isbuyoffer">
						<find_buy_offer result="$tradeoffer" buyer="$targetobject" wares="$tradeware"
							tradepartner="this.ship" />
					</do_if>
					<do_else>
						<find_sell_offer result="$tradeoffer" seller="$targetobject" wares="$tradeware"
							tradepartner="this.ship" />
					</do_else>
				</do_if>
				<do_if value="$tradeoffer.exists">
					<set_value name="$reserve_amount" exact="[$amount, $tradeoffer.amount].min" />
					<do_if value="$reserve_amount gt 0">
						<do_if value="$isbuyoffer">
							<debug_text
								text="'restore sell reservation for %1 %2(virtual: %3) at %4(%5) by %6(%7)'.[$reserve_amount, $tradeware, $tradeoffer.unbundle, $targetobject.knownname, $targetobject, this.knownname, this]"
								chance="$debugchance" />
							<add_ware_reservation object="$targetobject" type="sell" entity="this"
								ware="$tradeware" amount="$reserve_amount" virtual="@$tradeoffer.unbundle" />
						</do_if>
						<do_elseif value="not $reservation_removed? and $reserve_amount gt 0">
							<debug_text
								text="'restore buy reservation for %1 %2(virtual: %3) at %4(%5) by %6(%7)'.[$reserve_amount, $tradeware, $tradeoffer.rebundle, $targetobject.knownname, $targetobject, this.knownname, this]"
								chance="$debugchance" />
							<add_ware_reservation object="$targetobject" type="buy" entity="this"
								ware="$tradeware" amount="$reserve_amount" virtual="@$tradeoffer.rebundle" />
						</do_elseif>
					</do_if>
					<remove_value name="$reserve_amount" />
				</do_if>
			</do_if>
		</do_if>
		<do_else>
			<debug_text text="'skip restoring reservations for %1(%2) - not L or XL trader'.[this.name, this]"
				chance="$debugchance" />
		</do_else>
	</patch>
	<attention min="unknown">
		<actions>
			<!-- debugging -->
			<set_value name="$failreason" exact="''" />
			<do_if value="this.$jlpUniTraderRun" exact="true" negate="true">
				<return>
					<retval name="tradedetails" value="$tradedetails" />
					<retval name="success" value="false" />
				</return>
			</do_if>
			<!-- Remember the trade details in array {0} -> Buy {1} -> Sell -->
			<create_list name="$tradedetails" exact="0" />


			<!-- set up initial state for trade runs -->
			<label name="check trade offers" />
			<do_if value="$selloffer.available">
				<set_value name="$amount" exact="$selloffer.offeramount.{this}" />
				<do_if value="$simple">
					<!-- for simple trade runs we don't buy more than 75% -->
					<set_value name="$amount" exact="$amount * 3 / 4" />
				</do_if>
				<do_if value="$buyoffer.available">
					<do_if value="$buyoffer.offeramount.{this} lt $amount">
						<set_value name="$amount" exact="$buyoffer.offeramount.{this}" />
					</do_if>
				</do_if>
				<set_value name="$maxamount" exact="this.ship.cargo.{$selloffer.ware}.free" />
				<do_if value="$amount gt $maxamount">
					<set_value name="$amount" exact="$maxamount" />
				</do_if>
				<set_value name="$targetobject" exact="$selloffer.seller" />
				<set_value name="$tradeoffer" exact="$selloffer" />
				<!--<set_value name="$selloffer" exact="null" /> -->
			</do_if>
			<do_elseif value="$buyoffer.available">
				<set_value name="$amount" exact="$buyoffer.offeramount.{this}" />
				<set_value name="$maxamount" exact="this.ship.cargo.{$buyoffer.ware}.count" />
				<do_if value="$amount gt $maxamount">
					<set_value name="$amount" exact="$maxamount" />
				</do_if>
				<set_value name="$targetobject" exact="$buyoffer.buyer" />
				<set_value name="$buyer" exact="$targetobject" />
				<set_value name="$tradeoffer" exact="$buyoffer" />
				<!--<set_value name="$buyoffer" exact="null" /> -->
			</do_elseif>
			<do_elseif value="@$buyer.exists and $tradeware?">
				<!-- we are working on the buyoffer, but it is no longer available - use the stored information to
					find another appropriate offer -->
				<debug_text
					text="'original buyoffer is no longer available, try to find a new offer for %1 on %2(%3)'.[$tradeware, $buyer.knownname, $buyer]"
					chance="$debugchance" />
				<find_buy_offer result="$buyoffer" buyer="$buyer" wares="$tradeware"
					tradepartner="this.ship" />
				<debug_text text="'found %1'.[@$buyoffer]" chance="$debugchance" />
				<!-- remove the buyer variable so that if we haven't found an offer, the default handling is to return
					to the calling script -->
				<remove_value name="$buyer" />
				<!-- now continue as normal -->
				<resume label="check trade offers" />
			</do_elseif>
			<do_else>
				<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
					<debug_text text="player.age + ' un-parking...'" chance="$debugchance" />
					<run_script name="'move.undock'" />
				</do_if>
				<!-- force cleanup -->
				<do_if value="@$buyer_reserved.exists">
					<remove_ware_reservation object="$buyer_reserved" entity="this" />
					<remove_ware_reservation object="$buyer_reserved" entity="this"
						virtual="true" />
				</do_if>
				<do_if value="(@$buyer_reserved != $targetobject) and @$targetobject.exists">
					<remove_ware_reservation object="$targetobject" entity="this" />
					<remove_ware_reservation object="$targetobject" entity="this" virtual="true" />
				</do_if>
				<return>
					<retval name="success" value="true" />
					<retval name="tradedetails" value="$tradedetails" />
					<retval name="lasttrade" value="@$lasttrade" />
				</return>
			</do_else>

			<do_if value="not $targetobject.isoperational">
				<set_value name="$failreason" exact="'ERR_TARGET_INVALID'" />
				<resume label="finish" />
			</do_if>

			<do_if value="$amount == 0">
				<set_value name="$failreason" exact="'ERR_NO_CARGO_SPACE'" />
				<resume label="finish" />
			</do_if>

			<set_value name="$tradeware" exact="$tradeoffer.ware" />
			<set_value name="$isbuyoffer" exact="$tradeoffer.buyer == $targetobject" />

			<!-- skills -->
			<do_if value="$isbuyoffer" negate="true">
				<set_value name="$maxCargoAmount" exact="$tradeoffer.offeramount.{this}" />
				<set_value name="$maxSellofferCargoAmount" exact="$maxCargoAmount" />
				<set_value name="$warePriceMin" exact="$tradeoffer.ware.minprice" />
				<set_value name="$warePriceMax" exact="$tradeoffer.ware.maxprice" />
				<set_value name="$warePriceRange" exact="$warePriceMax - $warePriceMin" />
				<set_value name="$warePrice" exact="$tradeoffer.unitprice" />
				<set_value name="$warePriceBuyOffer" exact="$tradeoffer.unitprice" />
				<set_value name="$Tradesource" exact="$targetobject" />
				<set_value name="$Tradedestination" exact="null" />


				<do_if value="$buyoffer.available">
					<set_value name="$warePriceBuyOffer" exact="$buyoffer.unitprice" />
					<set_value name="$Tradedestination" exact="$buyoffer.buyer" />
					<set_value name="$maxBuyofferCargoAmount" exact="$buyoffer.offeramount.{this}" />
					<!-- greater 100% calculation not allowed -->
					<do_if value="$maxCargoAmount" min="$maxBuyofferCargoAmount">
						<set_value name="$maxCargoAmount" exact="$maxBuyofferCargoAmount" />
					</do_if>
				</do_if>

				<!-- risk of amount that can buy from ship to max buy amount -->
				<set_value name="$cargoRisk" exact="100i  -$amount * 100i / $maxCargoAmount" />
				<!-- risk of amount that can buy from sellstation to buystation -->
				<set_value name="$cargoWasteRisk" exact="$maxCargoAmount * 100i / $maxBuyofferCargoAmount" />
				<!-- risk of price that buy - sell price of ware -->
				<set_value name="$profitRisk" exact="($warePriceBuyOffer - $warePrice) * 100i / $warePriceRange" />
				<!-- risk of price that buy to min price of ware -->
				<set_value name="$priceRisk" exact="100i - ($warePrice - $warePriceMin) * 100i / $warePriceRange" />

				<!-- amount will raise lower cargo waste and high profit chance and low
					price -->
				<set_value name="$amountbeforeSkill" exact="$amount" />
				<set_value name="$amountSub" exact="$amount * (100i - this.$jlp_unitrader_efficiency)/100i" />
				<set_value name="$Weight" exact="($cargoWasteRisk + $cargoRisk + $profitRisk + $priceRisk)/4i" />
				<do_any>
					<do_all weight="$Weight">
						<!-- Many wares -->
						<!--<set_value name="$amount" exact="$amount - 0.2 * $amountSub * ((100
							- this.$jlp_unitrader_courage) /100i)" /> -->
						<set_value name="$amount" exact="(($amount - 0.2f * $amountSub))i" />
						<set_value name="$amountKat" exact="{8570,50320}" />
					</do_all>
					<do_all weight="25 - $Weight">
						<!-- good wares -->
						<set_value name="$amount" exact="(($amount - 0.4f * $amountSub))i" />
						<set_value name="$amountKat" exact="{8570,50321}" />
					</do_all>
					<do_all weight="50 - $Weight">
						<!-- normal -->
						<set_value name="$amount" exact="(($amount - 0.6f * $amountSub))i " />
						<set_value name="$amountKat" exact="{8570,50322}" />
					</do_all>
					<do_all weight="75 - $Weight">
						<!-- little wares -->
						<set_value name="$amount" exact="(($amount - 0.8f * $amountSub))i" />
						<set_value name="$amountKat" exact="{8570,50323}" />
					</do_all>
					<do_all weight="100 - $Weight">
						<!-- poor wares -->
						<set_value name="$amount" exact="(($amount -  $amountSub))i" />
						<set_value name="$amountKat" exact="{8570,50324}" />
					</do_all>
				</do_any>


				<set_value name="$notiTradedestination" exact="{8570,100}" />
				<set_value name="$notiTradesource" exact="{8570,100}" />

				<substitute_text text="$notiDears" source="{8570,10}">
					<replace string="'$ENTITYTYPE$'" with="this.typename" />
					<replace string="'$ENTITYNAME$'" with="this.name" />
					<replace string="'$OBJECTNAME$'" with="this.ship.name" />
					<replace string="'$SECTOR$'" with="this.sector.name" />
				</substitute_text>
				<do_if value="@$Tradedestination.exists">
					<substitute_text text="$notiTradedestination" source="{8570,11}">
						<replace string="'$ENTITYNAME$'" with="$Tradedestination.name" />
						<replace string="'$CLUSTER$'" with="$Tradedestination.cluster.name" />
						<replace string="'$SECTOR$'" with="$Tradedestination.sector.name" />
						<replace string="'$ZONE$'" with="$Tradedestination.zone.name" />
					</substitute_text>
				</do_if>
				<do_if value="@$Tradesource.exists">
					<substitute_text text="$notiTradesource" source="{8570,11}">
						<replace string="'$ENTITYNAME$'" with="$Tradesource.name" />
						<replace string="'$CLUSTER$'" with="$Tradesource.cluster.name" />
						<replace string="'$SECTOR$'" with="$Tradesource.sector.name" />
						<replace string="'$ZONE$'" with="$Tradesource.zone.name" />
					</substitute_text>
				</do_if>
				<substitute_text text="$detail1" source="{8570,50300}">
					<replace string="'$TRADEWARE$'" with="$tradeware" />
					<replace string="'$TRADEWAREVOLUME$'" with="$tradeware.volume" />
					<replace string="'$WAREPRICEBUYOFFER$'" with="$warePriceBuyOffer.formatted.default" />
					<replace string="'$WAREPRICESELLOFFER$'" with="$warePrice.formatted.default" />
					<replace string="'$WAREPRICEMAX$'" with="$warePriceMax.formatted.default" />
					<replace string="'$WAREPRICEMIN$'" with="$warePriceMin.formatted.default" />
				</substitute_text>
				<substitute_text text="$detail2" source="{8570,50301}">
					<replace string="'$TRADEDESTINATION$'" with="$notiTradedestination" />
					<replace string="'$TRADESOURCE$'" with="$notiTradesource" />
					<replace string="'$TRADEDESTAMOUNT$'" with="$maxBuyofferCargoAmount" />
					<replace string="'$TRADESOURCEAMOUNT$'" with="$maxSellofferCargoAmount" />
				</substitute_text>


				<substitute_text text="$detail3" source="{8570,50310}">
					<replace string="'$AMOUNT$'" with="$amount" />
					<replace string="'$SHIPAMOUNTMAX$'" with="$maxamount" />
					<replace string="'$BEFORESKILLAMOUNTMAX$'" with="$amountbeforeSkill" />
					<replace string="'$AMOUNTKAT$'" with="$amountKat" />
				</substitute_text>

				<!-- allow cargoWasteRisk, skill used to counteract for more trade) -->
				<do_if value="100-$cargoWasteRisk"
					max="100 - $minCargoWasteRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 "
				>
					<debug_text chance="$debugchance"
						text="Player.age + '%1 %2 Cargowaste from Station accept %3 minCargoWaste %4'.[this.ship.knownname, this.knownname, $maxBuyofferCargoAmount, $minCargoWasteRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ]" />
					<!-- allow cargo risk -->
					<do_if value="$cargoRisk"
						max="100 - $minCargoRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 "
					>
						<debug_text chance="$debugchance"
							text="Player.age + '%1 %2 Amount  accept cargoRisk %3 minargoAmount %4'.[this.ship.knownname, this.knownname, $cargoRisk,$minCargoRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ]" />
						<!-- allow Profit -->
						<do_if value="$profitRisk"
							max="100 - $minProfitRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 "
						>
							<debug_text chance="$debugchance"
								text="Player.age + '%1 %2 Profit risk  accept wareprice %3 warepricebuy %4 warepricerange %5 is %6'.[this.ship.knownname, this.knownname, $warePrice, $warePriceBuyOffer, $warePriceRange, ($warePriceBuyOffer - $warePrice)*100/$warePriceRange]" />
							<!-- allow wareprices -->
							<do_if value="100-$priceRisk"
								max="100 - $minPriceRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 "
							>
								<!-- Trade accepted with skill -->
								<debug_text
									text="player.age + 'Choose this Trade for my skills:\n %1\n %2\n %3 \n %4'.[$notiDears, $detail1, $detail2, $detail3]"
									chance="$debugchance" />
								<do_if value="this.$jlp_unitrader_show_extendedlogbook">
									<wait min="3s" max="9s" sinceversion="1" />
									<write_to_logbook category="squad"
										text="'%1\n %2\n %3 \n %4'.[$notiDears, $detail1, $detail2, $detail3]" />
								</do_if>
								<resume label="move to target object" />
							</do_if>
							<do_else>
								<set_value name="$tradeFailReason"
									exact="'priceRisk not accept: priceerisk: %1 minPriceRisk %2'.[100-$priceRisk, 100 - $minPriceRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ] " />
							</do_else>
						</do_if>
						<do_else>
							<set_value name="$tradeFailReason"
								exact="'profitRisk not accept: profitrisk %1 minProfitRisk %2'.[$profitRisk, 100 - $minProfitRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ] " />
						</do_else>
					</do_if>
					<do_else>
						<set_value name="$tradeFailReason"
							exact="'cargoRisk not accept: cargoRisk %1 minCargoRisk %2'.[$cargoRisk , 100 - $minCargoRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ]" />
					</do_else>
				</do_if>
				<do_else>
					<set_value name="$tradeFailReason"
						exact="'cargoWasteRisk not accept: cargoWasteRisk %1 minCargoWasteRisk %2'.[100-$cargoWasteRisk , 100 - $minCargoWasteRisk + (this.$jlp_unitrader_courage + this.$jlp_unitrader_efficiency) /2 ]" />
				</do_else>
				<!-- true -> to show the reason why cant -->
				<do_if value="this.$jlp_unitrader_show_extendedlogbook">
					<write_to_logbook category="squad"
						text="'Bad Trade for my skills:\n %1\n%2\n%3\n%4\nReason: %5'.[$notiDears, $detail1, $detail2,  $detail3,  $tradeFailReason ]" />
				</do_if>
				<debug_text
					text="player.age + 'Bad Trade for my skills:\n %1\n Reason: %2'.[$notiDears, $tradeFailReason ]"
					chance="$debugchance" />

				<!-- special handling for station-owned ships: make a reservation for the buyer if we are getting
					resources or selling products to better coordinate -->
				<do_if
					value="not $buyer_reserved? and $buyoffer.available and ($buyoffer.buyer == this.ship.commander or ($selloffer.available and $selloffer.seller == this.ship.commander))"
				>
					<debug_text text="'adding sell reservation for %1 %2 at %3'.[$amount, $tradeware, $buyoffer.buyer]"
						chance="$debugchance" />
					<add_ware_reservation object="$buyoffer.buyer" type="sell" entity="this"
						ware="$tradeware" amount="$amount" duration="5h" virtual="$buyoffer.unbundle" />
					<set_value name="$buyer_reserved" exact="$buyoffer.buyer" />
				</do_if>

				<!-- <return>
					<retval name="traderesult" value="0" />
					<retval name="success" value="false" />
					</return>
				-->
			</do_if>

			<set_command command="command.trade" param="$targetobject" />

			<label name="move to target object" />
			<do_if value="this.zone != $targetobject.zone">
				<run_script name="'move.generic'">
					<param name="destination" value="$targetobject" />
					<param name="endintargetzone" value="true" />
				</run_script>
				<!-- time has passed for the movement step, make sure there is still an offer that matches what we
					want to buy -->
				<do_if value="not $isbuyoffer?">
					<do_if value="$tradeoffer.exists">
						<set_value name="$isbuyoffer" exact="$tradeoffer.buyer == $targetobject" />
						<set_value name="$tradeware" exact="$tradeoffer.ware" />
					</do_if>
					<do_else>
						<do_if value="$tradeware?">
							<find_buy_offer result="$tradeoffer" buyer="$targetobject" wares="$tradeware"
								tradepartner="this.ship" />
							<do_if value="not $tradeoffer.available">
								<find_sell_offer result="$tradeoffer" seller="$targetobject" wares="$tradeware"
									tradepartner="this.ship" />
							</do_if>
						</do_if>
						<do_if value="not $tradeoffer.available">
							<!-- we cannot determine what we were going to do anymore, just abort -->
							<set_value name="$failreason" exact="'ERR_STATE_LOST'" />
							<resume label="finish" />
						</do_if>
						<do_else>
							<set_value name="$skipfind" exact="true" />
						</do_else>
					</do_else>
				</do_if>
				<do_if value="not $skipfind?">
					<do_if value="$isbuyoffer">
						<find_buy_offer result="$tradeoffer" buyer="$targetobject" wares="$tradeware"
							tradepartner="this.ship" />
					</do_if>
					<do_else>
						<find_sell_offer result="$tradeoffer" seller="$targetobject" wares="$tradeware"
							tradepartner="this.ship" />
					</do_else>
				</do_if>
				<remove_value name="$skipfind" />
			</do_if>
			<do_if value="not $tradeoffer.available">
				<debug_text text="player.age + ' after movement the tradeoffer was gone'" chance="$debugchance" />
				<resume label="check trade offers" />
			</do_if>
			<set_value name="$reserved" exact="0" />
			<!-- reserve the ware amount so we can be reasonably sure that we can trade the entire amount -->
			<do_if value="$amount gt $tradeoffer.offeramount.{this}">
				<debug_text
					text="player.age + ' reducing amount from %1 to %2'.[$amount, $tradeoffer.offeramount.{this}]"
					chance="$debugchance" />
				<set_value name="$amount" exact="$tradeoffer.offeramount.{this}" />
			</do_if>
			<set_value name="$tradeware" exact="$tradeoffer.ware" />
			<do_if value="$isbuyoffer">
				<do_if value="not $buyer_reserved?">
					<!-- we don't reserve again if we already reserved an amount for the buyoffer before -->
					<debug_text text="'adding sell reservation for %1 %2 at %3'.[$amount, $tradeware, $targetobject]"
						chance="$debugchance" />
					<add_ware_reservation object="$targetobject" type="sell" entity="this"
						virtual="$tradeoffer.unbundle" ware="$tradeware" amount="$amount" result="$reserved" />
					<set_value name="$buyer_reserved" exact="$targetobject" />
				</do_if>
				<do_else>
					<debug_text text="'checking sell reservation for %1 at %2'.[$tradeware, $targetobject]"
						chance="$debugchance" />
					<add_ware_reservation object="$targetobject" type="sell" entity="this"
						virtual="$tradeoffer.unbundle" ware="$tradeware" amount="0" result="$reserved" />
				</do_else>
			</do_if>
			<do_else>
				<debug_text text="'adding buy reservation for %1 %2 at %3'.[$amount, $tradeware, $targetobject]"
					chance="$debugchance" />
				<add_ware_reservation object="$targetobject" type="buy" entity="this"
					virtual="$tradeoffer.rebundle" ware="$tradeware" amount="$amount" result="$reserved" />
			</do_else>
			<do_if value="$reserved != $amount">
				<debug_text
					text="player.age + ' reserved %1 %2 at %3 (tried to reserve %4)'.[$reserved, $tradeware, $targetobject, $amount]"
					chance="$debugchance" />
			</do_if>
			<do_if value="$targetobject.isclass.ship">
				<debug_text text="player.age + ' reserved %1 %2 at %3'.[$reserved, $tradeware, $targetobject]"
					chance="$debugchance" />
			</do_if>
			<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
				<debug_text text="player.age + ' moving to park at ' + $targetobject.knownname"
					chance="$debugchance" />
				<run_script name="'move.park'" result="$parkresult">
					<param name="destination" value="$targetobject" />
					<param name="tradeoffer" value="$tradeoffer" />
					<param name="amount" value="$reserved" />
				</run_script>
				<do_if value="$parkresult">
					<debug_text text="player.age + ' now parked at ' + $targetobject.knownname" chance="$debugchance" />
				</do_if>
				<do_elseif value="this.$reevaluate_parking?">
					<remove_value name="this.$reevaluate_parking" />
					<debug_text
						text="player.age + ' need to re-evaluate our reason for parking at' + $targetobject.knownname"
						chance="$debugchance" />
					<resume label="move to target object" />
				</do_elseif>
				<do_else>
					<debug_text text="player.age + ' critical parking error!'" chance="$debugchance" />
					<resume label="check trade offers" />
				</do_else>
			</do_if>
			<do_else>
				<debug_text text="player.age + ' moving to dock at ' + $targetobject.knownname"
					chance="$debugchance" />
				<run_script name="'move.dockat'" result="$dockresult">
					<param name="destination" value="$targetobject" />
				</run_script>
				<do_if value="not $dockresult">
					<set_value name="$failreason" exact="'ERR_NO_DOCKING'" />
					<resume label="finish" />
				</do_if>
				<debug_text text="player.age + ' docked at ' + $targetobject.knownname" chance="$debugchance" />
			</do_else>
			<!-- in case the park/dock scripts returned instantly because we are already there, give the offers
				some time to update after adding reservations -->
			<wait exact="1s" sinceversion="4" />

			<label name="perform trade" />
			<!-- time has passed, make sure we have a tradeoffer that fits -->
			<do_if value="not $isbuyoffer?">
				<do_if value="$tradeoffer.exists">
					<set_value name="$isbuyoffer" exact="$tradeoffer.buyer == $targetobject" />
					<set_value name="$tradeware" exact="$tradeoffer.ware" />
				</do_if>
				<do_else>
					<do_if value="$tradeware?">
						<find_buy_offer result="$tradeoffer" buyer="$targetobject" wares="$tradeware"
							tradepartner="this.ship" />
						<do_if value="not $tradeoffer.available">
							<find_sell_offer result="$tradeoffer" seller="$targetobject" wares="$tradeware"
								tradepartner="this.ship" />
						</do_if>
					</do_if>
					<do_if value="not $tradeoffer.available">
						<!-- we cannot determine what we were going to do anymore, just abort -->
						<set_value name="$failreason" exact="'ERR_STATE_LOST'" />
						<resume label="finish" />
					</do_if>
					<do_else>
						<set_value name="$isbuyoffer" exact="$tradeoffer.buyer == $targetobject" />
						<set_value name="$skipfind" exact="true" />
					</do_else>
				</do_else>
			</do_if>
			<do_if value="not $skipfind?">
				<do_if value="$isbuyoffer">
					<find_buy_offer result="$tradeoffer" buyer="$targetobject" wares="$tradeware"
						tradepartner="this.ship" />
				</do_if>
				<do_else>
					<find_sell_offer result="$tradeoffer" seller="$targetobject" wares="$tradeware"
						tradepartner="this.ship" />
				</do_else>
			</do_if>
			<remove_value name="$skipfind" />
			<do_if value="$tradeoffer.available">
				<do_if value="$tradeoffer.offeramount.{this} gt 0">
					<debug_text text="player.age + ' start trade operation!'" chance="$debugchance" />
					<do_if value="not @$isbuyoffer and not $reservation_removed?">
						<!-- for sell offers the reservation should be removed directly before the trade is started because
							wares are immediately put in escrow -->
						<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
							<remove_ware_reservation object="$targetobject" type="buy" entity="this"
								ware="$tradeware" virtual="$tradeoffer.rebundle" />
						</do_if>
						<do_else>
							<remove_ware_reservation object="$targetobject" type="buy" entity="this"
								ware="$tradeware" virtual="$tradeoffer.rebundle" />
						</do_else>
						<set_value name="$reservation_removed" exact="1" />
						<!-- changing ware reservations triggers an offer update which could lead to the offer being removed -->
						<do_if value="not $tradeoffer.available">
							<!-- allow a little bit of time for the offer update to take place -->
							<wait exact="1s" sinceversion="4" />
							<resume label="perform trade" />
						</do_if>
					</do_if>
					<!-- last minute amount check -->
					<do_if value="@$isbuyoffer">
						<!-- we are selling -->
						<set_value name="$oldamount" exact="$amount" />
						<set_value name="$amount" exact="$tradeoffer.offeramount.{this}" />
						<set_value name="$maxamount" exact="this.ship.cargo.{$tradeware}.count" />
						<do_if value="$amount gt $maxamount">
							<set_value name="$amount" exact="$maxamount" />
						</do_if>
						<do_if value="$oldamount lt $amount">
							<debug_text
								text="'%1(%2) we can sell more %5 than we expected! Increase amount from %3 to %4 (directly before trade start)'.[this.ship.knownname, this.ship, $oldamount, $amount, $tradeware.name]"
								chance="$debugchance" />
						</do_if>
						<remove_value name="$oldamount" />
						<remove_value name="$maxamount" />
					</do_if>
					<do_elseif
						value="(not $tradeoffer.buyfree.{this}) and (($tradeoffer.unitprice * $amount) gt this.money)"
					>
						<!-- we are buying and the transaction is not free -->
						<debug_text
							text="'%1(%2) reducing amount of %3 to buy from %4(%5) from %6 to %7 (directly before trade start; not enough money)'.[this.ship.knownname, this.ship, $tradeware.name, $targetobject.knownname, $targetobject, $amount, this.money / $tradeoffer.unitprice]"
							chance="$debugchance" />
						<set_value name="$amount" exact="this.money / $tradeoffer.unitprice" />
					</do_elseif>
					<do_if value="$amount gt $tradeoffer.offeramount.{this}">
						<debug_text
							text="'%1(%2) reducing amount of %3 to trade with %4(%5) from %6 to %7 (directly before trade start; offeramount is lower)'.[this.ship.knownname, this.ship, $tradeware.name, $targetobject.knownname, $targetobject, $amount, $tradeoffer.offeramount.{this}]"
							chance="$debugchance" />
						<set_value name="$amount" exact="$tradeoffer.offeramount.{this}" />
					</do_if>
					<do_if value="$amount gt 0">
						<!-- now execute the trade -->
						<set_value name="$lasttrade" exact="[$isbuyoffer, $tradeware, $targetobject]" />
						<execute_trade tradeoffer="$tradeoffer" tradepartner="this.ship" amount="$amount"
							result="$traderesult" />
					</do_if>
					<do_else>
						<set_value name="$traderesult" exact="false" />
					</do_else>
					<!-- prepare texts for notifcation since the actual trade can be deleted
						by the time this is displayed! -->

					<do_if value="$traderesult">
						<do_if value="@$isbuyoffer">
							<set_value name="$AMOUNT" exact="$tradeoffer.transferredamount  + $tradeoffer.destroyedamount" />
						</do_if>
						<do_else>
							<set_value name="$AMOUNT" exact="$tradeoffer.transferredamount + $tradeoffer.destroyedamount" />
						</do_else>
						<!-- <set_value name="$PRICE" exact="$AMOUNT * $price" /> -->
						<set_value name="$PRICE" exact="$tradeoffer.unitprice" />
						<set_value name="$WARE" exact="$tradeoffer.ware.name" />
						<append_to_list name="$tradedetails" exact="[$targetobject, $AMOUNT, $WARE, $PRICE, $traderesult]" />
					</do_if>
					<do_if value="@$isbuyoffer">
						<!-- buyoffers remove their reservation directly after the trade -->
						<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
							<remove_ware_reservation object="$targetobject" type="sell" entity="this"
								ware="$tradeware" virtual="@$tradeoffer.unbundle" />
						</do_if>
						<do_else>
							<remove_ware_reservation object="$targetobject" type="sell" entity="this"
								ware="$tradeware" virtual="@$tradeoffer.unbundle" />
						</do_else>
					</do_if>
					<do_if
						value="$targetobject.isclass.station and ((@$isbuyoffer and @$tradeoffer.unbundle) or (not @$isbuyoffer and @$tradeoffer.rebundle))"
					>
						<!-- in case we attempted to trade ammo, trigger an update for their ammo offers -->
						<debug_text
							text="'schedule immediate supply offer update for %1 (%2)'.[$targetobject.knownname, $targetobject]"
							chance="$debugchance" />
						<schedule_supply_update object="$targetobject" />
					</do_if>

					<do_if value="this.isplayerowned">
						<do_if value="not $targetobject.isplayerowned and not $targetobject.hastradesubscription">
							<!-- if a playership trades with an NPC station that doesn't have a trade subscription anyway,
								store one offer snapshot -->
							<store_trade_offer_snapshot object="$targetobject" />
						</do_if>
					</do_if>
					<remove_value name="$isbuyoffer" />
					<remove_value name="$reservation_removed" />
					<detach_from_masstraffic object="this.ship" wait="true">
						<interrupt_after_time time="5min" />
					</detach_from_masstraffic>
					<do_if value="not $traderesult">
						<do_if value="$amount le 0">
							<set_value name="$failreason" exact="'ERR_AMOUNT_0'" />
						</do_if>
						<do_else>
							<set_value name="$failreason" exact="'ERR_EXECUTE_FAIL'" />
						</do_else>
						<resume label="finish" />
					</do_if>
					<do_if value="@$buyer == $targetobject">
						<!-- we have (probably) sold the wares, make sure the script can return during the next run of
							check trade offers -->
						<remove_value name="$buyer" />
					</do_if>
					<debug_text text="player.age + ' successfully traded chosen goods!'" chance="$debugchance" />
				</do_if>
				<do_else>
					<set_value name="$failreason" exact="'ERR_TRADEOFFER_RESERVED'" />
					<resume label="finish" />
				</do_else>
			</do_if>
			<do_else>
				<set_value name="$failreason" exact="'ERR_TRADEOFFER_GONE'" />
				<resume label="finish" />
			</do_else>

			<remove_value name="$traderesult" />
			<wait min="1s" max="3s" />
			<resume label="check trade offers" />

			<label name="finish" />
			<do_if value="@$targetobject.exists">
				<remove_ware_reservation object="$targetobject" entity="this" />
				<remove_ware_reservation object="$targetobject" entity="this" virtual="1" />
			</do_if>
			<do_if value="@$buyer_reserved.exists and (@$buyer_reserved != $targetobject)">
				<remove_ware_reservation object="$buyer_reserved" entity="this" />
				<remove_ware_reservation object="$buyer_reserved" entity="this" virtual="1" />
			</do_if>
			<do_if value="$failreason != ''">
				<debug_text
					text="player.age + ' \'%1\'(job: \'%2\') TRADE RUN FAILED! Error: %3'.[this.ship.knownname, this.ship.job, $failreason]"
					chance="$debugchance2" />
				<debug_text text="player.age + ' TRADE RUN FAILED! Error: ' + $failreason" chance="$debugchance" />
				<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
					<debug_text text="player.age + ' un-parking...'" chance="$debugchance" />
					<run_script name="'move.undock'" />
				</do_if>
				<return>
					<retval name="success" value="false" />
					<retval name="tradedetails" value="$tradedetails" />
					<retval name="lasttrade" value="@$lasttrade" />
				</return>
			</do_if>
			<do_else>
				<do_if value="$tradeoffer.available">
					<debug_text
						text="player.age + ' \'%1\'(job: \'%5\') traded %2 units of %3 with %4'.[this.ship.knownname, $amount, $tradeoffer.ware, $targetobject.knownname, this.ship.job]"
						chance="$debugchance2" />
				</do_if>
				<do_else>
					<debug_text
						text="player.age + ' \'%1\'(job: \'%4\') traded %2 units of something with %3'.[this.ship.knownname, $amount, $targetobject.knownname, this.ship.job]"
						chance="$debugchance2" />
				</do_else>

				<debug_text text="player.age + ' CONGRATULATIONS, TRADE RUN COMPLETE!'" chance="$debugchance" />
				<do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
					<debug_text text="player.age + ' un-parking...'" chance="$debugchance" />
					<run_script name="'move.undock'" />
				</do_if>
				<return>
					<retval name="success" value="true" />
					<retval name="tradedetails" value="$tradedetails" />
					<retval name="lasttrade" value="@$lasttrade" />
				</return>
			</do_else>

		</actions>
	</attention>
	<on_abort>
		<do_if value="@$buyer_reserved.exists">
			<remove_ware_reservation object="$buyer_reserved" entity="this" />
			<remove_ware_reservation object="$buyer_reserved" entity="this" virtual="1" />
		</do_if>
		<do_if value="(@$buyer_reserved != $targetobject) and @$targetobject.exists">
			<remove_ware_reservation object="$targetobject" entity="this" />
			<remove_ware_reservation object="$targetobject" entity="this" virtual="1" />
		</do_if>
	</on_abort>
</aiscript>
